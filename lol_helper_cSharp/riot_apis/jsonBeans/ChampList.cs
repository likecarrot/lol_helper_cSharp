// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var champList = ChampList.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ChampList
    {
        [JsonProperty("active")]
        public bool Active { get; set; }

        [JsonProperty("alias")]
        public string Alias { get; set; }

        [JsonProperty("banVoPath")]
        public string BanVoPath { get; set; }

        [JsonProperty("baseLoadScreenPath")]
        public string BaseLoadScreenPath { get; set; }

        [JsonProperty("baseSplashPath")]
        public string BaseSplashPath { get; set; }

        [JsonProperty("botEnabled")]
        public bool BotEnabled { get; set; }

        [JsonProperty("chooseVoPath")]
        public string ChooseVoPath { get; set; }

        [JsonProperty("disabledQueues")]
        public string[] DisabledQueues { get; set; }

        [JsonProperty("freeToPlay")]
        public bool FreeToPlay { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("ownership")]
        public Ownership Ownership { get; set; }

        [JsonProperty("purchased")]
        public double Purchased { get; set; }

        [JsonProperty("rankedPlayEnabled")]
        public bool RankedPlayEnabled { get; set; }

        [JsonProperty("roles")]
        public string[] Roles { get; set; }

        [JsonProperty("squarePortraitPath")]
        public string SquarePortraitPath { get; set; }

        [JsonProperty("stingerSfxPath")]
        public string StingerSfxPath { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }
    }

    public partial class Ownership
    {
        [JsonProperty("loyaltyReward")]
        public bool LoyaltyReward { get; set; }

        [JsonProperty("owned")]
        public bool Owned { get; set; }

        [JsonProperty("rental")]
        public Rental Rental { get; set; }

        [JsonProperty("xboxGPReward")]
        public bool XboxGpReward { get; set; }
    }

    public partial class Rental
    {
        [JsonProperty("endDate")]
        public long EndDate { get; set; }

        [JsonProperty("purchaseDate")]
        public double PurchaseDate { get; set; }

        [JsonProperty("rented")]
        public bool Rented { get; set; }

        [JsonProperty("winCountRemaining")]
        public long WinCountRemaining { get; set; }
    }

    public partial class ChampList
    {
        public static ChampList[] FromJson(string json) => JsonConvert.DeserializeObject<ChampList[]>(json, QuickType.Converter.Settings);
    }
}
