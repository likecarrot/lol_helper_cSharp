// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var champSelectSession = ChampSelectSession.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ChampSelectSession
    {
        [JsonProperty("actions")]
        public Action[][] Actions { get; set; }

        [JsonProperty("allowBattleBoost")]
        public bool AllowBattleBoost { get; set; }

        [JsonProperty("allowDuplicatePicks")]
        public bool AllowDuplicatePicks { get; set; }

        [JsonProperty("allowLockedEvents")]
        public bool AllowLockedEvents { get; set; }

        [JsonProperty("allowRerolling")]
        public bool AllowRerolling { get; set; }

        [JsonProperty("allowSkinSelection")]
        public bool AllowSkinSelection { get; set; }

        [JsonProperty("bans")]
        public Bans Bans { get; set; }

        [JsonProperty("benchChampions")]
        public object[] BenchChampions { get; set; }

        [JsonProperty("benchEnabled")]
        public bool BenchEnabled { get; set; }

        [JsonProperty("boostableSkinCount")]
        public long BoostableSkinCount { get; set; }

        [JsonProperty("chatDetails")]
        public ChatDetails ChatDetails { get; set; }

        [JsonProperty("counter")]
        public long Counter { get; set; }

        [JsonProperty("entitledFeatureState")]
        public EntitledFeatureState EntitledFeatureState { get; set; }

        [JsonProperty("gameId")]
        public long GameId { get; set; }

        [JsonProperty("hasSimultaneousBans")]
        public bool HasSimultaneousBans { get; set; }

        [JsonProperty("hasSimultaneousPicks")]
        public bool HasSimultaneousPicks { get; set; }

        [JsonProperty("isCustomGame")]
        public bool IsCustomGame { get; set; }

        [JsonProperty("isSpectating")]
        public bool IsSpectating { get; set; }

        [JsonProperty("localPlayerCellId")]
        public long LocalPlayerCellId { get; set; }

        [JsonProperty("lockedEventIndex")]
        public long LockedEventIndex { get; set; }

        [JsonProperty("myTeam")]
        public MyTeam[] MyTeam { get; set; }

        [JsonProperty("pickOrderSwaps")]
        public object[] PickOrderSwaps { get; set; }

        [JsonProperty("recoveryCounter")]
        public long RecoveryCounter { get; set; }

        [JsonProperty("rerollsRemaining")]
        public long RerollsRemaining { get; set; }

        [JsonProperty("skipChampionSelect")]
        public bool SkipChampionSelect { get; set; }

        [JsonProperty("theirTeam")]
        public object[] TheirTeam { get; set; }

        [JsonProperty("timer")]
        public Timer Timer { get; set; }

        [JsonProperty("trades")]
        public object[] Trades { get; set; }
    }

    public partial class Action
    {
        [JsonProperty("actorCellId")]
        public long ActorCellId { get; set; }

        [JsonProperty("championId")]
        public long ChampionId { get; set; }

        [JsonProperty("completed")]
        public bool Completed { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("isAllyAction")]
        public bool IsAllyAction { get; set; }

        [JsonProperty("isInProgress")]
        public bool IsInProgress { get; set; }

        [JsonProperty("pickTurn")]
        public long PickTurn { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class Bans
    {
        [JsonProperty("myTeamBans")]
        public object[] MyTeamBans { get; set; }

        [JsonProperty("numBans")]
        public long NumBans { get; set; }

        [JsonProperty("theirTeamBans")]
        public object[] TheirTeamBans { get; set; }
    }

    public partial class ChatDetails
    {
        [JsonProperty("mucJwtDto")]
        public MucJwtDto MucJwtDto { get; set; }

        [JsonProperty("multiUserChatId")]
        public string MultiUserChatId { get; set; }

        [JsonProperty("multiUserChatPassword")]
        public string MultiUserChatPassword { get; set; }
    }

    public partial class MucJwtDto
    {
        [JsonProperty("channelClaim")]
        public string ChannelClaim { get; set; }

        [JsonProperty("domain")]
        public string Domain { get; set; }

        [JsonProperty("jwt")]
        public string Jwt { get; set; }

        [JsonProperty("targetRegion")]
        public string TargetRegion { get; set; }
    }

    public partial class EntitledFeatureState
    {
        [JsonProperty("additionalRerolls")]
        public long AdditionalRerolls { get; set; }

        [JsonProperty("unlockedSkinIds")]
        public object[] UnlockedSkinIds { get; set; }
    }

    public partial class MyTeam
    {
        [JsonProperty("assignedPosition")]
        public string AssignedPosition { get; set; }

        [JsonProperty("cellId")]
        public long CellId { get; set; }

        [JsonProperty("championId")]
        public long ChampionId { get; set; }

        [JsonProperty("championPickIntent")]
        public long ChampionPickIntent { get; set; }

        [JsonProperty("entitledFeatureType")]
        public string EntitledFeatureType { get; set; }

        [JsonProperty("nameVisibilityType")]
        public string NameVisibilityType { get; set; }

        [JsonProperty("obfuscatedPuuid")]
        public string ObfuscatedPuuid { get; set; }

        [JsonProperty("obfuscatedSummonerId")]
        public long ObfuscatedSummonerId { get; set; }

        [JsonProperty("puuid")]
        public string Puuid { get; set; }

        [JsonProperty("selectedSkinId")]
        public long SelectedSkinId { get; set; }

        [JsonProperty("spell1Id")]
        public long Spell1Id { get; set; }

        [JsonProperty("spell2Id")]
        public long Spell2Id { get; set; }

        [JsonProperty("summonerId")]
        public long SummonerId { get; set; }

        [JsonProperty("team")]
        public long Team { get; set; }

        [JsonProperty("wardSkinId")]
        public long WardSkinId { get; set; }
    }

    public partial class Timer
    {
        [JsonProperty("adjustedTimeLeftInPhase")]
        public long AdjustedTimeLeftInPhase { get; set; }

        [JsonProperty("internalNowInEpochMs")]
        public long InternalNowInEpochMs { get; set; }

        [JsonProperty("isInfinite")]
        public bool IsInfinite { get; set; }

        [JsonProperty("phase")]
        public string Phase { get; set; }

        [JsonProperty("totalTimeInPhase")]
        public long TotalTimeInPhase { get; set; }
    }

    public partial class ChampSelectSession
    {
        public static ChampSelectSession FromJson(string json) => JsonConvert.DeserializeObject<ChampSelectSession>(json, QuickType.Converter.Settings);
    }
}
