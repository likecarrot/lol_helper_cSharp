// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var rankdatas = Rankdatas.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Rankdatas
    {
        [JsonProperty("earnedRegaliaRewardIds")]
        public object[] EarnedRegaliaRewardIds { get; set; }

        [JsonProperty("highestCurrentSeasonReachedTierSR")]
        public string HighestCurrentSeasonReachedTierSr { get; set; }

        [JsonProperty("highestPreviousSeasonAchievedDivision")]
        public string HighestPreviousSeasonAchievedDivision { get; set; }

        [JsonProperty("highestPreviousSeasonAchievedTier")]
        public string HighestPreviousSeasonAchievedTier { get; set; }

        [JsonProperty("highestPreviousSeasonEndDivision")]
        public string HighestPreviousSeasonEndDivision { get; set; }

        [JsonProperty("highestPreviousSeasonEndTier")]
        public string HighestPreviousSeasonEndTier { get; set; }

        [JsonProperty("highestRankedEntry")]
        public HighestRankedEntry HighestRankedEntry { get; set; }

        [JsonProperty("highestRankedEntrySR")]
        public HighestRankedEntry HighestRankedEntrySr { get; set; }

        [JsonProperty("queueMap")]
        public QueueMap QueueMap { get; set; }

        [JsonProperty("queues")]
        public HighestRankedEntry[] Queues { get; set; }

        [JsonProperty("rankedRegaliaLevel")]
        public long RankedRegaliaLevel { get; set; }

        [JsonProperty("seasons")]
        public Seasons Seasons { get; set; }

        [JsonProperty("splitsProgress")]
        public SplitsProgress SplitsProgress { get; set; }
    }

    public partial class HighestRankedEntry
    {
        [JsonProperty("division")]
        public string Division { get; set; }

        [JsonProperty("highestDivision")]
        public string HighestDivision { get; set; }

        [JsonProperty("highestTier")]
        public string HighestTier { get; set; }

        [JsonProperty("isProvisional")]
        public bool IsProvisional { get; set; }

        [JsonProperty("leaguePoints")]
        public long LeaguePoints { get; set; }

        [JsonProperty("losses")]
        public long Losses { get; set; }

        [JsonProperty("miniSeriesProgress")]
        public string MiniSeriesProgress { get; set; }

        [JsonProperty("previousSeasonAchievedDivision")]
        public string PreviousSeasonAchievedDivision { get; set; }

        [JsonProperty("previousSeasonAchievedTier")]
        public string PreviousSeasonAchievedTier { get; set; }

        [JsonProperty("previousSeasonEndDivision")]
        public string PreviousSeasonEndDivision { get; set; }

        [JsonProperty("previousSeasonEndTier")]
        public string PreviousSeasonEndTier { get; set; }

        [JsonProperty("provisionalGameThreshold")]
        public long ProvisionalGameThreshold { get; set; }

        [JsonProperty("provisionalGamesRemaining")]
        public long ProvisionalGamesRemaining { get; set; }

        [JsonProperty("queueType")]
        public string QueueType { get; set; }

        [JsonProperty("ratedRating")]
        public long RatedRating { get; set; }

        [JsonProperty("ratedTier")]
        public string RatedTier { get; set; }

        [JsonProperty("tier")]
        public string Tier { get; set; }

        [JsonProperty("warnings")]
        public object Warnings { get; set; }

        [JsonProperty("wins")]
        public long Wins { get; set; }
    }

    public partial class QueueMap
    {
        [JsonProperty("CHERRY")]
        public HighestRankedEntry Cherry { get; set; }

        [JsonProperty("RANKED_FLEX_SR")]
        public HighestRankedEntry RankedFlexSr { get; set; }

        [JsonProperty("RANKED_SOLO_5x5")]
        public HighestRankedEntry RankedSolo5X5 { get; set; }

        [JsonProperty("RANKED_TFT")]
        public HighestRankedEntry RankedTft { get; set; }

        [JsonProperty("RANKED_TFT_DOUBLE_UP")]
        public HighestRankedEntry RankedTftDoubleUp { get; set; }

        [JsonProperty("RANKED_TFT_TURBO")]
        public HighestRankedEntry RankedTftTurbo { get; set; }
    }

    public partial class Seasons
    {
        [JsonProperty("CHERRY")]
        public Cherry Cherry { get; set; }

        [JsonProperty("RANKED_FLEX_SR")]
        public Cherry RankedFlexSr { get; set; }

        [JsonProperty("RANKED_SOLO_5x5")]
        public Cherry RankedSolo5X5 { get; set; }

        [JsonProperty("RANKED_TFT")]
        public Cherry RankedTft { get; set; }

        [JsonProperty("RANKED_TFT_DOUBLE_UP")]
        public Cherry RankedTftDoubleUp { get; set; }

        [JsonProperty("RANKED_TFT_TURBO")]
        public Cherry RankedTftTurbo { get; set; }
    }

    public partial class Cherry
    {
        [JsonProperty("currentSeasonEnd")]
        public long CurrentSeasonEnd { get; set; }

        [JsonProperty("currentSeasonId")]
        public long CurrentSeasonId { get; set; }

        [JsonProperty("nextSeasonStart")]
        public long NextSeasonStart { get; set; }
    }

    public partial class SplitsProgress
    {
    }

    public partial class Rankdatas
    {
        public static Rankdatas FromJson(string json) => JsonConvert.DeserializeObject<Rankdatas>(json, QuickType.Converter.Settings);
    }
}
