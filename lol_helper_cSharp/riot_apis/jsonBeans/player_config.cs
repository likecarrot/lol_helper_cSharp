// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var playerConfig2 = PlayerConfig2.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class PlayerConfig
    {
        [JsonProperty("FloatingText")]
        public Dictionary<string, bool> FloatingText { get; set; }

        [JsonProperty("General")]
        public General General { get; set; }

        [JsonProperty("HUD")]
        public Hud Hud { get; set; }

        [JsonProperty("LossOfControl")]
        public LossOfControl LossOfControl { get; set; }

        [JsonProperty("Performance")]
        public Performance Performance { get; set; }

        [JsonProperty("Voice")]
        public Voice Voice { get; set; }

        [JsonProperty("Volume")]
        public Volume Volume { get; set; }
    }

    public partial class General
    {
        [JsonProperty("AutoAcquireTarget")]
        public bool AutoAcquireTarget { get; set; }

        [JsonProperty("BindSysKeys")]
        public bool BindSysKeys { get; set; }

        [JsonProperty("CursorOverride")]
        public bool CursorOverride { get; set; }

        [JsonProperty("CursorScale")]
        public double CursorScale { get; set; }

        [JsonProperty("EnableAudio")]
        public bool EnableAudio { get; set; }

        [JsonProperty("EnableTargetedAttackMove")]
        public bool EnableTargetedAttackMove { get; set; }

        [JsonProperty("GameMouseSpeed")]
        public long GameMouseSpeed { get; set; }

        [JsonProperty("HideEyeCandy")]
        public bool HideEyeCandy { get; set; }

        [JsonProperty("OSXMouseAcceleration")]
        public bool OsxMouseAcceleration { get; set; }

        [JsonProperty("PredictMovement")]
        public bool PredictMovement { get; set; }

        [JsonProperty("PreferDX9LegacyMode")]
        public bool PreferDx9LegacyMode { get; set; }

        [JsonProperty("PreferOpenGLLegacyMode")]
        public bool PreferOpenGlLegacyMode { get; set; }

        [JsonProperty("RecommendJunglePaths")]
        public bool RecommendJunglePaths { get; set; }

        [JsonProperty("RelativeTeamColors")]
        public bool RelativeTeamColors { get; set; }

        [JsonProperty("ShowCursorLocator")]
        public bool ShowCursorLocator { get; set; }

        [JsonProperty("ShowGodray")]
        public bool ShowGodray { get; set; }

        [JsonProperty("ShowTurretRangeIndicators")]
        public bool ShowTurretRangeIndicators { get; set; }

        [JsonProperty("SnapCameraOnRespawn")]
        public bool SnapCameraOnRespawn { get; set; }

        [JsonProperty("ThemeMusic")]
        public long ThemeMusic { get; set; }

        [JsonProperty("WaitForVerticalSync")]
        public bool WaitForVerticalSync { get; set; }

        [JsonProperty("WindowMode")]
        public long WindowMode { get; set; }
    }

    public partial class Hud
    {
        [JsonProperty("AutoDisplayTarget")]
        public bool AutoDisplayTarget { get; set; }

        [JsonProperty("CameraLockMode")]
        public long CameraLockMode { get; set; }

        [JsonProperty("ChatChannelVisibility")]
        public long ChatChannelVisibility { get; set; }

        [JsonProperty("ChatScale")]
        public long ChatScale { get; set; }

        [JsonProperty("DisableHudSpellClick")]
        public bool DisableHudSpellClick { get; set; }

        [JsonProperty("DrawHealthBars")]
        public bool DrawHealthBars { get; set; }

        [JsonProperty("EmotePopupUIDisplayMode")]
        public long EmotePopupUiDisplayMode { get; set; }

        [JsonProperty("EmoteSize")]
        public long EmoteSize { get; set; }

        [JsonProperty("EnableLineMissileVis")]
        public bool EnableLineMissileVis { get; set; }

        [JsonProperty("EternalsMilestoneDisplayMode")]
        public long EternalsMilestoneDisplayMode { get; set; }

        [JsonProperty("FlashScreenWhenDamaged")]
        public bool FlashScreenWhenDamaged { get; set; }

        [JsonProperty("FlashScreenWhenStunned")]
        public bool FlashScreenWhenStunned { get; set; }

        [JsonProperty("FlipMiniMap")]
        public bool FlipMiniMap { get; set; }

        [JsonProperty("GlobalScale")]
        public long GlobalScale { get; set; }

        [JsonProperty("KeyboardScrollSpeed")]
        public long KeyboardScrollSpeed { get; set; }

        [JsonProperty("MapScrollSpeed")]
        public double MapScrollSpeed { get; set; }

        [JsonProperty("MiddleClickDragScrollEnabled")]
        public bool MiddleClickDragScrollEnabled { get; set; }

        [JsonProperty("MinimapMoveSelf")]
        public bool MinimapMoveSelf { get; set; }

        [JsonProperty("MinimapScale")]
        public double MinimapScale { get; set; }

        [JsonProperty("MirroredScoreboard")]
        public bool MirroredScoreboard { get; set; }

        [JsonProperty("NumericCooldownFormat")]
        public long NumericCooldownFormat { get; set; }

        [JsonProperty("ObjectiveVoteScale")]
        public long ObjectiveVoteScale { get; set; }

        [JsonProperty("ScrollSmoothingEnabled")]
        public bool ScrollSmoothingEnabled { get; set; }

        [JsonProperty("ShowAllChannelChat")]
        public bool ShowAllChannelChat { get; set; }

        [JsonProperty("ShowAlliedChat")]
        public bool ShowAlliedChat { get; set; }

        [JsonProperty("ShowAttackRadius")]
        public bool ShowAttackRadius { get; set; }

        [JsonProperty("ShowNeutralCamps")]
        public bool ShowNeutralCamps { get; set; }

        [JsonProperty("ShowOffScreenPointsOfInterest")]
        public bool ShowOffScreenPointsOfInterest { get; set; }

        [JsonProperty("ShowSpellCosts")]
        public bool ShowSpellCosts { get; set; }

        [JsonProperty("ShowSpellRecommendations")]
        public bool ShowSpellRecommendations { get; set; }

        [JsonProperty("ShowSummonerNames")]
        public bool ShowSummonerNames { get; set; }

        [JsonProperty("ShowSummonerNamesInScoreboard")]
        public bool ShowSummonerNamesInScoreboard { get; set; }

        [JsonProperty("ShowTeamFramesOnLeft")]
        public bool ShowTeamFramesOnLeft { get; set; }

        [JsonProperty("ShowTimestamps")]
        public bool ShowTimestamps { get; set; }

        [JsonProperty("SmartCastOnKeyRelease")]
        public bool SmartCastOnKeyRelease { get; set; }

        [JsonProperty("SmartCastWithIndicator_CastWhenNewSpellSelected")]
        public bool SmartCastWithIndicatorCastWhenNewSpellSelected { get; set; }
    }

    public partial class LossOfControl
    {
        [JsonProperty("LossOfControlEnabled")]
        public bool LossOfControlEnabled { get; set; }

        [JsonProperty("ShowSlows")]
        public bool ShowSlows { get; set; }
    }

    public partial class Performance
    {
        [JsonProperty("EnableHUDAnimations")]
        public bool EnableHudAnimations { get; set; }
    }

    public partial class Voice
    {
        [JsonProperty("ShowVoiceChatHalos")]
        public bool ShowVoiceChatHalos { get; set; }

        [JsonProperty("ShowVoicePanelWithScoreboard")]
        public bool ShowVoicePanelWithScoreboard { get; set; }
    }

    public partial class Volume
    {
        [JsonProperty("AmbienceMute")]
        public bool AmbienceMute { get; set; }

        [JsonProperty("AmbienceVolume")]
        public long AmbienceVolume { get; set; }

        [JsonProperty("AnnouncerMute")]
        public bool AnnouncerMute { get; set; }

        [JsonProperty("AnnouncerVolume")]
        public long AnnouncerVolume { get; set; }

        [JsonProperty("MasterMute")]
        public bool MasterMute { get; set; }

        [JsonProperty("MasterVolume")]
        public long MasterVolume { get; set; }

        [JsonProperty("MusicMute")]
        public bool MusicMute { get; set; }

        [JsonProperty("MusicVolume")]
        public long MusicVolume { get; set; }

        [JsonProperty("PingsMute")]
        public bool PingsMute { get; set; }

        [JsonProperty("PingsVolume")]
        public long PingsVolume { get; set; }

        [JsonProperty("SfxMute")]
        public bool SfxMute { get; set; }

        [JsonProperty("SfxVolume")]
        public long SfxVolume { get; set; }

        [JsonProperty("VoiceMute")]
        public bool VoiceMute { get; set; }

        [JsonProperty("VoiceVolume")]
        public long VoiceVolume { get; set; }
    }

    public partial class PlayerConfig
    {
        public static PlayerConfig FromJson(string json) => JsonConvert.DeserializeObject<PlayerConfig>(json, QuickType.Converter.Settings);
    }
}
